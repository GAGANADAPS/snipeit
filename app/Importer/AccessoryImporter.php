<?php
/**
 * Created by PhpStorm.
 * User: parallelgrapefruit
 * Date: 12/24/16
 * Time: 12:56 PM
 */

namespace App\Importer;

use App\Helpers\Helper;
use App\Models\Accessory;

class AccessoryImporter extends ItemImporter
{
    protected $accessories;
    function __construct($filename, $logCallback, $progressCallback, $errorCallback, $testRun = false, $user_id = -1, $updating = false, $usernameFormat = null)
    {
        parent::__construct($filename, $logCallback, $progressCallback, $errorCallback, $testRun, $user_id, $updating, $usernameFormat);
        $this->accessories = Accessory::all();
    }

    protected function handle($row)
    {
        parent::handle($row); // TODO: Change the autogenerated stub
        $this->createAccessoryIfNotExists();
    }

    /**
     * Create an accessory if a duplicate does not exist
     *
     * @author Daniel Melzter
     * @since 3.0
     */
    public function createAccessoryIfNotExists()
    {
        $accessoryId = $this->accessories->search(function ($key) {
            return strcasecmp($key->name, $this->item['name']) == 0;
        });
        if ($accessoryId !== false) {
            if (!$this->updating) {
                $this->log('A matching Accessory ' . $this->item["name"] . ' already exists.  ');
                return;
            }

            $this->log('Updating Accessory');
            $accessory = $this->accessories[$accessoryId];
            $accessory->update($this->sanitizeItemForStoring($accessory, $updating = true));
            if (!$this->testRun) {
                $accessory->save();
            }
            return;
        }
        $this->log("No Matching Accessory, Creating a new one");
        $accessory = new Accessory();
        $accessory->fill($this->sanitizeItemForStoring($accessory));

        if ($this->testRun) {
            $this->log('TEST RUN - Accessory  ' . $this->item["name"] . ' not created');
            return;
        }

        if ($accessory->save()) {
            $accessory->logCreate('Imported using CSV Importer');
            $this->log('Accessory ' . $this->item["name"] . ' was created');
        }
        $this->jsonError($accessory, 'Accessory');
    }
}
